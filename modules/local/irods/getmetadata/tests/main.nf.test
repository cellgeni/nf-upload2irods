nextflow_process {
    name "Test Process: IRODS_GETMETADATA"
    script "../main.nf"
    process "IRODS_GETMETADATA"

    tag "modules"
    tag "irods"
    tag "irods/getmetadata"

    test("Get data object metadata") {
        tag "data_object"

        when {
            process {
                """
                input[0] = [ [id: "data_object_1"], "/seq/illumina/runs/41/41796/lane1/plex1/41796_1#1.cram" ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.versions },
                { assert process.out.csv },
                { assert snapshot(process.out).match() },
                { assert path(process.out.csv.get(0).get(1)).csv.columnCount == 3 }
            )
        }
    }

    test("Get collection metadata") {
        tag "collection"

        when {
            process {
                """
                input[0] = [ [id: "collection_1"], "/seq/illumina/cellranger-arc/cellranger-arc202_count_43c2d8dd1eaf98b635896165fd98ae3a" ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.versions },
                { assert process.out.csv },
                { assert snapshot(process.out).match() },
                { assert path(process.out.csv.get(0).get(1)).csv.columnCount == 3 }
            )
        }
    }

    test("Get linked collection metadata") {
        tag "collection"

        when {
            process {
                """
                input[0] = [ [id: "linked_collection_1"], "/archive/cellgeni/multiome/internal/cellranger_arc/6439/WS_wEMB13400246WS_wEMB13400220" ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.versions },
                { assert process.out.csv },
                { assert snapshot(process.out).match() },
                { assert path(process.out.csv.get(0).get(1)).csv.columnCount == 3 }
            )
        }
    }

    test("Get empty metadata") {
        tag "empty_metadata"

        when {
            process {
                """
                input[0] = [ [id: "emptymeta_collection_1"], "/archive/cellgeni/multiome" ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.versions },
                { assert process.out.csv },
                { assert snapshot(process.out).match() },
            )
        }
    }
}